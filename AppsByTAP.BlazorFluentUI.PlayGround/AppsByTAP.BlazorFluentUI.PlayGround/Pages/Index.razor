@page "/"

@using AppsByTAP.BlazorFluentUI.Components.Theme.Models
@using AppsByTAP.BlazorFluentUI.Components.Theme.Themes.Light
@using AppsByTAP.BlazorFluentUI.Components.Theme.Themes.Dark
@using AppsByTAP.BlazorFluentUI.Components.Button
@using AppsByTAP.BlazorFluentUI.Components.DropDown
@using AppsByTAP.BlazorFluentUI.Components.Icon
@using AppsByTAP.BlazorFluentUI.Components.Expander
@using AppsByTAP.BlazorFluentUI.Components.Spinner
@using AppsByTAP.BlazorFluentUI.Components.Modal
@using AppsByTAP.BlazorFluentUI.Components.CheckBox
@using AppsByTAP.BlazorFluentUI.Components.Chip
@using AppsByTAP.BlazorFluentUI.Components.Tabs
@using AppsByTAP.BlazorFluentUI.Components.ChoiceGroup

@inject IThemeProvider ThemeProvider

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<button @onclick="ChangeTheme">Change Theme</button>
<DefaultButton Text="Toggle Spinners" IsPrimary="false" OnClick="ToggleSpinners" />
<DefaultButton Text="My Btn" IsPrimary="true" OnClick="Add" />
<CompoundButton Text="TAP Standard" SecondaryText="My Sec txt" IsPrimary="false" OnClick="Add" />
<CompoundButton Text="TAP Standard" SecondaryText="My Sec txt" IsPrimary="true" OnClick="Add" />
<IconButton Icon="IconTypes.Delete" OnClick="Add" />

<div @onclick="() => guid = Guid.NewGuid().ToString()">
    Guid: @guid
    <br />
    <DefaultButton Text="New Guid" OnClick="() => Console.WriteLine('I')" OnClickStopPropagation="true"  />
</div>

<DropDown ItemsSource="ints2" Disabled="true" />
<DropDown ItemsSource="ints2" @bind-SelectedItem="_selectedItem" Label="My Label" Disabled="false" Width="100px" />
<div style="display: @(_hideDropDown ? "none" : "block");">
    <DropDown ItemsSource="strs" @bind-SelectedItem="_selectedStr" IsMultiSelect="true" @bind-SelectedItems="selectedItemsStr" />
</div>
<DefaultButton Text="Hide Drop Down" OnClick="@(() => _hideDropDown = !_hideDropDown)" />
<DefaultButton Text="Reset strs" OnClick="() => selectedItemsStr = new List<string>() { strs[0]}" />

@{
    <ol>
    @foreach(string s in selectedItemsStr)
    {
        <li>@s</li>
    }
    </ol>
}



<Expander IsOpen="true">
    <Header>
        Hello world
    </Header>
    <ChildContent>
        <p>Hello World</p>
    </ChildContent>
</Expander>
<Spinner Label="Hello World" Size="SpinnerSize.Large" IsLoading="_isLoading" />
<Spinner Label="Hello World" Position="SpinnerLabelPosition.Top" Size="SpinnerSize.Medium" IsLoading="_isLoading" />
<Spinner Label="Hello World" Position="SpinnerLabelPosition.Left" Size="SpinnerSize.Small" IsLoading="_isLoading" />
<Spinner Label="Hello World" Position="SpinnerLabelPosition.Right" Size="SpinnerSize.xSmall" IsLoading="_isLoading" />

@counter
Selected Item: @((_selectedItem is not null ? _selectedItem : new DropDownItem<string>("", DropDownItemType.Header).ToString()))

<DefaultButton Text="Show Modal" OnClick="() => _showModal = !_showModal" />

<CheckBox Label="Hello World Start" />
<CheckBox Label="Hello World End" BoxSide="BoxSide.End" />

<ChipSet ItemsSource="strs" ChipType="ChipType.Input" Label="Test: " CreateNewItem="CreateNewItem" />

<Tabs Width="500px" Height="200px" TabContentCanScroll="true" >
    <Tab Header="Tab 1" Color="Blue">
        <div>
            <p>Hello world</p>
        </div>
    </Tab>
    <Tab Header="2" Color="Orange">
        <div>
            <p>This is some awesome text</p>
        </div>
    </Tab>
    <Tab Header="3 Tab" Color="Yellow">
        <div >
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut molestie commodo dictum. Fusce nulla lacus, rhoncus vel placerat in, finibus sed neque. Aliquam non arcu nec ipsum molestie condimentum. Praesent lobortis felis sodales malesuada pulvinar. Etiam laoreet erat ac odio ullamcorper pretium. Donec pellentesque leo eu consequat faucibus. Duis ornare dapibus purus sed porttitor. Vestibulum consequat at ante vitae posuere. Sed ut justo sed arcu faucibus tempor. Nulla in egestas dolor, quis semper lacus. Sed interdum nisi quis ligula commodo pulvinar.

            Duis at magna vestibulum, dictum libero nec, commodo augue. Phasellus aliquam orci non consequat faucibus. Morbi pulvinar eros vel lobortis iaculis. Mauris commodo auctor egestas. Cras iaculis sollicitudin nisl, a dictum ipsum porta et. Phasellus vitae tincidunt arcu. Nullam rutrum et velit eu gravida.

            Cras lacinia dui tellus, vitae mollis diam ullamcorper a. Nulla quis orci vel diam finibus consequat. Integer scelerisque molestie sagittis. Suspendisse sit amet auctor elit. Aliquam scelerisque ipsum lacus, id tempus metus luctus sit amet. Etiam tincidunt diam nisi, ut euismod mauris fringilla a. Curabitur tempus ultricies sodales. Sed fringilla pretium est, ut tincidunt ipsum semper et. Aenean eu sagittis tellus, quis condimentum massa. Phasellus rutrum ultrices dolor, in tincidunt arcu finibus pellentesque. Sed varius fermentum dui, dignissim pharetra neque consectetur in.

            Ut ligula enim, egestas egestas massa et, pulvinar iaculis libero. Nulla consequat, sapien nec porta mollis, odio enim ultricies lorem, ut eleifend urna orci et enim. Praesent gravida ultrices felis, sed luctus nulla scelerisque ut. Etiam id magna vitae diam dictum placerat. Curabitur pretium elit in ipsum lobortis, ac vehicula ex dictum. Mauris dictum odio sed nisl consequat consequat. Nunc luctus, ex ut vestibulum posuere, nunc odio tristique augue, sed dignissim nunc felis sit amet lectus. Donec est velit, maximus nec pulvinar rutrum, lobortis sed ipsum. Nulla leo ipsum, feugiat ac ipsum non, posuere consectetur leo. In in mattis tortor. Maecenas quis pharetra urna. Aliquam eleifend at arcu quis accumsan. Suspendisse varius, libero ut ullamcorper dictum, ipsum nulla placerat justo, a viverra ante lorem id nibh. Proin fermentum augue sit amet mattis sollicitudin.

            Fusce elementum imperdiet diam vitae sollicitudin. Donec est nunc, mattis in sem maximus, luctus posuere arcu. In rhoncus est a nunc egestas luctus. Sed ac efficitur urna. Donec vitae augue iaculis, sollicitudin urna eu, condimentum ipsum. Donec id ultricies nisi, quis accumsan mi. Nullam quis pellentesque erat, ut molestie ligula. Vivamus iaculis ac eros a egestas. Sed feugiat, lectus a volutpat dignissim, sem enim varius lacus, quis semper orci libero in ante. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum et elit nec odio vestibulum semper. Nulla nisi nibh, ullamcorper id tempor in, ullamcorper vel leo. Donec cursus eget mauris non commodo. Nullam quis pellentesque dui.
        </div>
    </Tab>
</Tabs>

<ChoiceGroup T="char">
    <Choice Value="@('a')">
        Option 1
    </Choice>
    <Choice Value="@('a')">
        Option 2
    </Choice>
    <Choice Value="@('a')">
        Option 3
    </Choice>
</ChoiceGroup>



<Modal @bind-ShowWindow="_showModal" ShowHeader="false" CanLightDismiss="true">
    <Header>
        My Header
    </Header>
    <Content>
        sed est quis, pharetra consequat libero.
    </Content>
</Modal>

@code
{
    private string guid = "";

    private int counter = 0;
    private bool _isDark = true;
    private bool _isLoading = true;
    private DropDownItem<string> _selectedItem = null;
    private string _selectedStr = "";
    private bool _showModal;
    private bool _hideDropDown = false;

    List<DropDownItem<string>>
    ints2 = new List<DropDownItem<string>>
        {
        new DropDownItem<string>("Header1", DropDownItemType.Header),
        new DropDownItem<string>("Item 1", DropDownItemType.Item),
        new DropDownItem<string>("Item 2", DropDownItemType.Item),
        new DropDownItem<string>("Item 3", DropDownItemType.Item),
        new DropDownItem<string>("Item 4", DropDownItemType.Item),
        new DropDownItem<string>("Header 2", DropDownItemType.Header),
        new DropDownItem<string>("Item 5", DropDownItemType.Item),
        new DropDownItem<string>("Item 6", DropDownItemType.Item),
        new DropDownItem<string>("Item 7", DropDownItemType.Item),
        new DropDownItem<string>("Item 8", DropDownItemType.Item)
                                    };

    List<string> strs = new List<string> { "Apple", "Banana", "Strawberry", "Blackberry", "Blueberry", "Raspberry", "Grapes", "Plum", "Pear" };
    IList<string> selectedItemsStr = new List<string>();

    public Index()
    {

    }

    private void ChangeTheme()
    {
        if (_isDark)
        {
            ThemeProvider.ChangeTheme(ThemeProvider.CreateTheme(new LightThemePalette()));
        }
        else
        {
            ThemeProvider.ChangeTheme(ThemeProvider.CreateTheme(new DarkThemePalette()));
        }

        _isDark = !_isDark;
    }

    private void Add()
    {
        counter++;
    }

    private void ToggleSpinners()
    {
        _isLoading = !_isLoading;
    }

    public class MeTest
    {
        public string MyStr { get; set; }

        public MeTest(string str) => MyStr = str;
        public override string ToString() => MyStr;
    }

    public void RemoveChip(string id)
    {
        Console.WriteLine("Remove the chip: " + id);
    }

    public void EditChip()
    {
        Console.WriteLine("Edit the chip");
    }

    public string CreateNewItem(string str) => str;

}
