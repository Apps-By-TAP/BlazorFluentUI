@namespace AppsByTAP.BlazorFluentUI.Components.Button
@inherits SplitButtonViewModel<TItem>

@typeparam TItem

@using AppsByTAP.BlazorFluentUI.Components.Icon
@using AppsByTAP.BlazorFluentUI.Components.Callout
@using AppsByTAP.BlazorFluentUI.Components.Spinner

<div style="position: relative; display: inline;">
    <div class="splitButtonContainer" id="@_id" style="width: @Width;">
        <div class="mainBtn" @onclick="OnClickInternal" @onclick:stopPropagation="OnClickStopPropagation">
            @if (ShowIsBusy && IsBusy)
            {
                <TinySpinner IsLoading=true />
            }
            else if (SelectedItem is not null && !string.IsNullOrEmpty(SelectedItem.ToString()))
            {
                @if (SelectedItemTemplate is not null)
                {
                    @SelectedItemTemplate(SelectedItem)
                }
                else
                {
                    @SelectedItem.ToString()
                }
            }
            else
            {
                <span>Select an item</span>
            }
        </div>
        <div class="arrowBtn" @onclick="Toggle">
            <Icon IconType="IconTypes.PlaySolid" />
        </div>
    </div>
    <Callout @bind-IsOpen="_isOpen" TargetID="@_id" CanLightDismiss="CanLightDismiss"
             Width="@Width">
        <div class="listContainter">
            @if (ItemsSource is not null)
            {
                foreach (TItem item in ItemsSource)
                {
                    <span class="item" @onclick="() => SelectItem(item)">
                        @if (DropDownTemplate is not null)
                        {
                            @DropDownTemplate(item)
                        }
                        else
                        {
                            @item.ToString()
                        }
                    </span>
                }
            }
            else
            {
                <span>There are no options</span>
            }
        </div>
    </Callout>
</div>