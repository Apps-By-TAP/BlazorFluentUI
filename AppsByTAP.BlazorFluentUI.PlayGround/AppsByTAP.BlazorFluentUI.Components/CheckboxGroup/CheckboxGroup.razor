@typeparam T

@using AppsByTAP.BlazorFluentUI.Components.Toggle
@using AppsByTAP.BlazorFluentUI.Components.CheckBox
@using Microsoft.AspNetCore.Components.Web.Virtualization

<div>
    <div class="label">
        @Label
    </div>
    <div class="checkboxGroupContainer" style="flex-direction: @(GroupDirection == Common.GroupDirection.Vertical ? "column": "row"); flex-wrap : @(WrapItems ? "wrap" : "nowrap"); width: @Width; height: @Height;">
        <Virtualize Items="ItemsSource">
            @if(UseToggleSwitches)
            {
                <div class="toggleContainer">
                    <Toggle IsCheckedChanged="x => CheckChanged(x, context)" LabelIsInline="true"/> 
                    <div class="toggleLabel">@context.ToString()</div>
                </div>
            }
            else
            {
                <CheckBox Label="@(context.ToString())" IsCheckedChanged="x => CheckChanged(x, context)" />
            }
        </Virtualize>
    </div>
</div>