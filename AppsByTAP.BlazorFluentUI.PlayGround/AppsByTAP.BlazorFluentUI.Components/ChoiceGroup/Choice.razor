
<div class="choiceContainer" @onclick="() => Parent.ChildSelected(this)">
    <div class="radioBtn @(IsSelected ? "selected" : "")">
        <div class="fill">

        </div>
    </div>
    @ChildContent
</div>

@code {
    [CascadingParameter]
    public ChoiceGroup Parent { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool IsSelected { get; set; }
    [Parameter]
    public EventCallback<bool> IsSelectedChanged { get; set; }

    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "TabPage must exist within a TabControl");
        base.OnInitialized();

        Parent.SelectionChanged += Parent_SelectionChanged;
    }


    private async void Parent_SelectionChanged()
    {
        IsSelected = Parent.SelectedChoice == this;
        await InvokeAsync(() => StateHasChanged());
    }

}

<style>
    .choiceContainer {
        display: flex;
        flex-direction: row;
        align-items: center;        
    }

    .radioBtn {
        border: 1px solid;
        border-radius: 50%;
        width: 25px;
        height: 25px;
        margin: 5px;

        display: flex;
        justify-content : center;
        align-items: center;
    }

    .fill {
        display: none;
        width: 15px;
        height: 15px;
        border-radius: 50%;
        background-color: var(--palette-Black);
    }

    .choiceContainer:hover .fill {
        display: block;
    }

    .selected{
        border-color: blue;
    }

    .selected .fill {
        display: block;
        background-color: blue;
    }
</style>
